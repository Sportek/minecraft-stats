name: minecraft-stats
services:


  ##########################################################################
  # PostgreSQL
  ##########################################################################
  pgsql:
    image: 'postgres:15'
    container_name: 'stats-pgsql-${APP_NAME}'
    restart: 'unless-stopped'
    environment:
      PGPASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'sailpgsql:/var/lib/postgresql/data'
    networks:
      - sail
    healthcheck:
      test: [
        "CMD-SHELL", 
        "pg_isready -q -d $${DB_DATABASE} -U $${DB_USER} || exit 1"
      ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ##########################################################################
  # Backend
  ##########################################################################
  adonis_app:
    container_name: 'stats-backend-${APP_NAME}'
    image: "sportek/minecraft-stats-back:${IMAGE_TAG:-latest}"
    restart: 'unless-stopped'
    ports:
      - '9000:9000'
    env_file:
      - .env.production
    depends_on:
      - pgsql
    command: >
      sh -c "node ace migration:run --force && node ace serve"
    networks:
      - sail
    logging:
      driver: loki
      options:
        loki-url: "http://loki-${APP_NAME}:3100/loki/api/v1/push"
        loki-external-labels: "service=adonis_app"
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"
    volumes:
    - server-images:/home/node/app/public/images


  ##########################################################################
  # Scheduler
  ##########################################################################
  adonis_scheduler:
    container_name: 'stats-scheduler-${APP_NAME}'
    image: "sportek/minecraft-stats-back:${IMAGE_TAG:-latest}"
    restart: 'unless-stopped'
    env_file:
      - .env.production
    depends_on:
      - pgsql
      - adonis_app
    command: 'node ace scheduler:run'
    networks:
      - sail
    logging:
      driver: loki
      options:
        loki-url: "http://loki-${APP_NAME}:3100/loki/api/v1/push"
        loki-external-labels: "service=adonis_scheduler"
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"
    volumes:
      - server-images:/home/node/app/public/images
    healthcheck:
      test: ["CMD", "pgrep", "node"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  
  ##########################################################################
  # Grafana
  ##########################################################################
  grafana:
    image: grafana/grafana-enterprise
    container_name: 'grafana-${APP_NAME}'
    restart: 'unless-stopped'
    ports:
    - '9020:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - sail
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  ##########################################################################
  # Prometheus
  ##########################################################################
  prometheus:
    image: prom/prometheus:latest
    container_name: 'prometheus-${APP_NAME}'
    restart: 'unless-stopped'
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - sail
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:9090/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
      
    
  ##########################################################################
  # Loki
  ##########################################################################
  loki:
    image: grafana/loki:3.3.2
    container_name: 'loki'
    restart: 'unless-stopped'
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - './loki-config.yaml:/etc/loki/local-config.yaml'
      - 'loki-data:/loki'
    networks:
      - sail
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  ##########################################################################
  # Promtail
  ##########################################################################
  promtail:
    image: grafana/promtail:3.3.2
    container_name: 'promtail-${APP_NAME}'
    restart: 'unless-stopped'
    command: -config.file=/etc/promtail/config.yml -config.expand-env=true
    volumes:
      - './promtail-config.yaml:/etc/promtail/config.yml'
      - promtail-data:/var/log
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - sail
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


networks:
  sail:
    driver: bridge

volumes:
  sailpgsql:
    name: 'stats-pgsql-${APP_NAME}'
  server-images:
    name: 'stats-images-${APP_NAME}'
    driver: local
  loki-data:
    name: 'loki-data-${APP_NAME}'
  promtail-data:
    name: 'promtail-data-${APP_NAME}'
  grafana-storage: {}
