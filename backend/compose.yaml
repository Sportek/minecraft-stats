name: minecraft-stats
services:
  pgsql:
    image: 'postgres:15'
    container_name: 'stats-pgsql-${APP_NAME}'
    environment:
      PGPASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'sailpgsql:/var/lib/postgresql/data'
    networks:
      - sail
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', '${DB_DATABASE}', '-U', '${DB_USER}']
      retries: 3
      timeout: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  adonis_app:
    container_name: 'stats-backend-${APP_NAME}'
    image: "sportek/minecraft-stats-back:${IMAGE_TAG}"
    ports:
      - '9000:9000'
    env_file:
      - .env.production
    depends_on:
      - pgsql
    command: >
      sh -c "node ace migration:run && node ace serve"
    networks:
      - sail
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  adonis_scheduler:
    container_name: 'stats-scheduler-${APP_NAME}'
    image: "sportek/minecraft-stats-back:${IMAGE_TAG}"
    env_file:
      - .env.production
    depends_on:
      - pgsql
      - adonis_app
    command: 'node ace scheduler:run'
    networks:
      - sail
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  sail:
    driver: bridge

volumes:
  sailpgsql:
    name: 'stats-pgsql-${APP_NAME}'
  server-images:
    name: 'stats-images-${APP_NAME}'
