name: Déployer le backend de Minecraft-Stats

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4

      - name: Configurer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Installer les dépendances
        run: npm ci

      - name: Se connecter à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construire et pousser l'image Docker
        run: |
          cd backend
          docker build -t ${{ vars.DOCKERHUB_USERNAME }}/minecraft-stats-back:${GITHUB_SHA} .
          docker push ${{ vars.DOCKERHUB_USERNAME }}/minecraft-stats-back:${GITHUB_SHA}
          docker tag ${{ vars.DOCKERHUB_USERNAME }}/minecraft-stats-back:${GITHUB_SHA} ${{ vars.DOCKERHUB_USERNAME }}/minecraft-stats-back:latest
          docker push ${{ vars.DOCKERHUB_USERNAME }}/minecraft-stats-back:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Déployer via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/minecraft-stats/website
            git pull origin main
            cd /home/minecraft-stats/website/backend
            cat > .env << EOL
            IMAGE_TAG=$GITHUB_SHA
            APP_NAME=${{ vars.APP_NAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_USER=${{ secrets.DB_USER }}
            EOL
            docker compose pull
            docker compose --env-file .env.production up -d
            docker image prune -f